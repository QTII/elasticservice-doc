JavaScript에서 ServeElastic의 ElasticService 호출 방법


------------------------------------
HTML에서 elastic 관련 스크립트 로딩 
------------------------------------

<script src="html5/elastic-init-1.4.3.jsp"></script>
<script src="html5/elastic-util-1.4.3.js"></script>


------------------------------------
ElasticService 호출
------------------------------------

1. 요청시 사용할 ElasticParams 생성.
   1) 방식 1
          var ep = new ElasticParams();
          ep.setParameter("service", "ElasticService Bean ID"); 
          ep.setParameter("resType", ""json12"); 
          ep.setParameter("encoding", "UTF-8"); 

          var row = {};
          row["column_name1"] = "column 값";
          row["column_name2"] = "column 값";
          ep.addRow(null, row);

   2) 방식 2
          var ep = new ElasticParams();
          ep.addParameters({
                 service : "ElasticService 클래스 Bean ID",  // service 대신 cmd를 사용해도 됨. service와 cmd는 동일. 
                 resType : "json12",
                 encoding : "UTF-8"
          });
          var row = {column_name1:"column 값", column_name2:"column 값"};
          ep.addRow(null, row);

2. AJAX로 요청
          elastic_ajax(ep, response 핸들러 함수);

3. Example
          function requestSomething() {
               var ep = new ElasticParams();
               ep.setParameter("service", "ElasticService Bean ID"); 
               ep.setParameter("resType", ""json12"); 
               ep.setParameter("encoding", "UTF-8"); 

               var row = {};
               row["column_name1"] = "column 값";
               row["column_name2"] = "column 값";
               ep.addRow(null, row);

               elastic_ajax(ep, requestSomething_responseHandler);
          }

          function requestSomething_responseHandler(ep) {
               if (ep.getCode() == 0) {
                    alert("Saved");
               }

               // 처리 로직 추가 요망.
          }
